<html>
<head>

	<title>	HTML Practice  </title>
<style>
	body{margin: 3vh 5vw;}
.text{background-color:dodgerblue;}
code{background-color:lightslategray}
strong{font-size: larger;background-color: orangered;}
.des{background-color: mediumpurple;}
.grid3{display: grid; grid-template-columns: 1fr 1fr 1fr; width: 100%;min-height: 10vh;}
</style>
</head>


<body>


<h1>	HTML title</h1>
<div style="display: flex;"><p>This page contain javascript fundamentals. Page contain differnt colors for differnent purposes.</p><br>
	&nbsp; &nbsp;<p class="text">ACTION LINE</p> &nbsp; &nbsp; <p><code>CODE</code></p> &nbsp; &nbsp; <p class="des">DESCRIPTION</p></div>
	

<div id="changeText" class="text" onclick="changeText()"> Click me to change HTML text</div>
<code> CODE  : document.getElementById("changeText").innerHTML="i am changed through JS"</code>
<br><hr><br>

<div class="des">We can change any style of text, div like display, color, fontSize etc.</div>
<div id="changeColor" class="text" onclick="document.getElementById('changeColor').style.color='white'"> Click me to change color of text</div>
<code class="code"> CODE  : document.getElementById('changeColor').style.color='white'"</code>
<br><hr><br>

<div class="des"><i><strong> Hoisting</strong></i>: varialbe can be accessed before its declaration </div>
<code>a=5;</code><br><code>var a;</code>

<br><br><br>

<div class="des">When var is created with "new" keyword, it is created as Object </div>
<code>x = new string</code> 
<br><br><br>

<div class="des">Accessing property within object by this keyword</div>
<div class="text" id="thisKeyword" >  </div>
<code>fullName : function(){
	return this.firstName + " " + this.lastName
}
document.getElementById("thisKeyword").innerHTML = person.fullName();
</code>
<div></div>

<br><br><br>

<div class="des"> We can change the innerHTML of div, botton or any other container itself, by using "THIS"</div>
<div class="text" onclick="this.innerHTML=Date()"> click me to show date</div>
<code>e.g. "<"button onclick="this.innerHTML=Date()"> button </code>

<br><br><br>
<div style="display: grid; grid-template-columns: 1fr 1fr 1fr; width: 100%;min-height: 10vh;" >
<div style="text-align: center;" ><i><strong> var</strong></i>
	<div>global/functional scope</div><div>var can be redeclared</div><div>var and let can be declared without being initialized </div>
</div>
<div style="text-align: center;" ><i><strong> let</strong></i>
	<div>block scope, with in {}</div><div>let variables can be updated but not re-declared</div><div>let may not be initialized during declaration</div>
</div>
<div style="text-align: center;" ><i><strong> const</strong></i>
	<div>block scope</div><div>const variables can neither be updated nor re-declared</div><div>const must be initialized during declaration</div>
</div>
</div>

<p id="jsCode"></p>


<br><br><br>

<div style="display:flex;justify-content: flex-end;">
	<div class="text" >This button prints the whole page</div><br>
<button style=" background-color: midnightblue;color:navajowhite;border: none;border-radius: 20%; font-size: 15px;padding: 1vh 3vw;"
onclick="print()">print</button>
</div>


<script>

	const person={firstName:"saud", lastName:"Malik",  email:"saud@hmail.com", password:"fjsdjf",
	 fullName : function(){
		 return this.firstName + " " + this.lastName
	 } 
	};
	document.getElementById("jsCode").innerHTML=`${person.firstName} hello thanks`;

	function changeText(){
		document.getElementById("changeText").innerHTML="i am changed through JS"
	};

	document.getElementById("thisKeyword").innerHTML = person.fullName();
	

</script>
</body>
</html>		